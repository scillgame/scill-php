<?php
/**
 * BattlePassLevelChallengeTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  SCILL
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * SCILL API
 *
 * SCILL gives you the tools to activate, retain and grow your user base in your app or game by bringing you features well known in the gaming industry: Gamification. We take care of the services and technology involved so you can focus on your game and content.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@scillgame.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.21
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace SCILL;

/**
 * BattlePassLevelChallengeTest Class Doc Comment
 *
 * @category    Class
 * @description BattlePassLevelChallenge
 * @package     SCILL
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class BattlePassLevelChallengeTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "BattlePassLevelChallenge"
     */
    public function testBattlePassLevelChallenge()
    {
    }

    /**
     * Test attribute "challenge_goal"
     */
    public function testPropertyChallengeGoal()
    {
    }

    /**
     * Test attribute "name"
     */
    public function testPropertyName()
    {
    }

    /**
     * Test attribute "current_challenge_amount"
     */
    public function testPropertyCurrentChallengeAmount()
    {
    }

    /**
     * Test attribute "completed"
     */
    public function testPropertyCompleted()
    {
    }

    /**
     * Test attribute "active"
     */
    public function testPropertyActive()
    {
    }
}
